from aiogram import types
import asyncio
from loader import dp, db, bot
from aiogram.dispatcher import FSMContext
from keyboards.inline import ordering
from states.ordering import OrderingState


@dp.callback_query_handler(state=OrderingState.choose_category)
async def open_category(call: types.CallbackQuery):
    meals = await db.open_category(int(call.data))

    category = await db.select_category(category_id=int(call.data))

    if len(meals) == 0:
        await call.message.edit_text(
            f"–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: <i>{category[1]}</i>",
            reply_markup=None
        )

        await call.message.answer(
            "–ú–µ–Ω—é –ø—É—Å—Ç–æ üòï\n"
            "–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ª–∏–±–æ –º—ã –≥–æ—Ç–æ–≤–∏–º –Ω–æ–≤–æ–µ –º–µ–Ω—é, –ª–∏–±–æ –≤–∞–º —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É üòå\n\n"
            "–û—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤—ã –º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ Uzum Tezkor –∏–ª–∏ –∂–µ –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞!\n\n"
            "<b><a href='https://www.uzumtezkor.uz/ru/restaurants/94b3642e-5147-4afb-a026-c7f54c80a108'>Uzum Tezkor</a></b>\n"
            "<b><a href='https://eda.yandex.ru/restaurant/like_2kzq8?utm_campaign=superapp_taxi_web&utm_medium=referral&utm_source=rst_shared_link'>–Ø–Ω–¥–µ–∫—Å.–ï–¥–∞</a></b>\n\n",
            disable_web_page_preview=True
        )
        await asyncio.sleep(.5)
        
        categories = await db.list_categories()
        categories_kb = await ordering.list_categories(categories)

        await OrderingState.choose_category.set()
        await call.message.answer(
            "<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</b>",
            reply_markup=categories_kb
        )

        return

    meals_kb = await ordering.list_meals(meals)

    await OrderingState.choose_meal.set()
    await call.message.edit_text(
        "<b>–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ</b>",
        reply_markup=meals_kb
    )


@dp.callback_query_handler(state=OrderingState.choose_meal)
async def open_meal(call: types.CallbackQuery, state: FSMContext):
    meal = await db.select_meal(meal_id=int(call.data))
    category = await db.select_category(category_id=int(meal[1]))

    await state.update_data(meal_id=int(call.data))
    await OrderingState.meal_menu.set()

    await call.message.reply(
        (f"<b>ID:</b> {meal[0]}\n"
        f"<b>–ï—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏:</b> {'–ï—Å—Ç—å' if meal[-1] else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n"
        f"<b>–ò–º—è:</b> {meal[2]}\n") + \
        f"<b>–¶–µ–Ω–∞:</b> {meal[4]}\n" +\
        (f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {meal[3]}\n") + \
        (f"<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {category[1]}\n" if category else "<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> –ë—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞\n") + \
        (f"<b>–°–∫–∏–¥–∫–∞:</b> {'–ï—Å—Ç—å' if meal[5] else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n") + \
        (f"<b>–í–µ–ª–∏—á–∏–Ω–∞ —Å–∫–∏–¥–∫–∏</b>: {meal[6]}%" if meal[5] else "")
    )
